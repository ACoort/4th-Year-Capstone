{"version":3,"sources":["serviceWorker.js","components/UsernamePicker.js","components/Room/GameList.js","components/Room/ChatLog.js","components/Room/UserList.js","components/Room/Room.js","components/Games/Double07.js","components/Games/Hot_Potato.js","components/Games/Match.js","components/Games/Game4.js","components/Games/Game5.js","components/NotFound.js","components/App.js","index.js"],"names":["Boolean","window","location","hostname","match","UsernamePicker","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","submitUsername","event","preventDefault","socket","emit","username","usernameInput","current","value","socketId","id","state","React","createRef","_this2","on","data","updateGameList","games","updateUsername","updateSocketId","localStorage","setItem","setState","history","push","react_default","a","createElement","className","onSubmit","type","name","placeholder","required","ref","Component","GameList","gameList","map","user","index","key","onClick","goToGame","ChatLog","sendMessage","chatInput","userChat","chatLog","item","concat","message","UserList","users","Room","game","i","keys","tempUsers","length","temp","Room_GameList","userState","Room_ChatLog","Room_UserList","Double07","choosePlayer","allTargets","action","target","showTargets","showSingleTarget","chooseAction","closeTargetList","player","targetList","hp","ap","removeAllListeners","_this3","disabled","class","aria-label","Hot_Potato","updateTimer","timer","endOfTurn","userTurn","potatoHolder","time","handImage","clearInterval","interval","timeFromServer","explode","stage","document","getElementById","Hammer","next","setInterval","startTime","Date","now","src","alt","Match","submitDirection","direction","console","log","selectCard","flip","playersTurn","players","Game4","Game5","NotFound","App","io","BrowserRouter","Switch","Route","exact","path","render","components_UsernamePicker","assign","components_Room_Room","Games_Double07","Games_Hot_Potato","Games_Match","component","ReactDOM","components_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.df7c2e86.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nclass UsernamePicker extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            socketId: ''    \n        }; \n        this.usernameInput = React.createRef();         \n    }\n\n    componentDidMount() {\n        this.props.socket.on('games', (data) => {\n            this.props.updateGameList(data.games);\n        });\n\n        this.props.socket.on('username', (data) => {\n            this.props.updateUsername(data);\n            this.props.updateSocketId(this.props.socket.id);\n            // Save username to localstorage for persistance\n            window.localStorage.setItem('username', data);\n            this.setState({\n                username: data,\n                socketId: this.props.socket.id\n            });\n\n            this.props.history.push(\"/room\");\n        });\n    }\n\n    // Submits user data to server and updates usernamePicker and app component state\n    submitUsername = (event) => {\n        event.preventDefault();\n        this.props.socket.emit('joinServer', {\n            username: this.usernameInput.current.value,\n            socketId: this.props.socket.id  \n        });\n        // Clear the username input field\n        this.usernameInput.current.value = '';\n    } \n\n    render() {\n        return (\n            <div className=\"hero is-fullheight\">\n                <div className=\"hero-body\">\n                    <div className=\"container has-text-centered\">\n                    <h1 className=\"landing title is-1 has-text-white\">UI Tester</h1>\n                    <h5 className=\"subtitle is-5 has-text-light\">Where dreams go to die</h5>\n                        <div className=\"columns is-centered\">\n                            <div className=\"column is-4\">\n                                <div className=\"box\">\n                                    <form onSubmit={this.submitUsername}>\n                                        <label className=\"label\">Pick your username</label>\n                                        <div className=\"field\">\n                                            <div className=\"control\">\n                                                <input\n                                                    className=\"input\"\n                                                    type=\"text\"\n                                                    name=\"username\"\n                                                    placeholder=\"Username\"\n                                                    required\n                                                    ref={this.usernameInput}\n                                                />\n                                            </div>  \n                                        </div>\n                                        <div className=\"field\">\n                                            <div className=\"control\">\n                                                <button type=\"submit\" className=\"button is-info is-fullwidth\">\n                                                    Submit\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </form>  \n                                </div>                  \n                            </div>\n                        </div>\n                    </div>\n                </div>  \n            </div>\n        );\n    }\n}\n\nexport default UsernamePicker;","import React from 'react';\n\nclass GameList extends React.Component {    \n    render() {\n        return (\n            <div className=\"box\">\n                <h1 className=\"title\">Games</h1>\n                <div className=\"content\">\n                    <div className=\"buttons\">\n                        {this.props.gameList.map((user, index) => (\n                            <button\n                                className=\"button\"\n                                key={index}\n                                onClick={() => this.props.goToGame(user)}\n                            >\n                                {user}\n                            </button>\n                        ))}   \n                    </div>            \n                </div>          \n            </div>\n        );\n    }\n}\n\nexport default GameList;","import React from 'react';\n\nclass ChatLog extends React.Component {\n    constructor(props) {\n        super(props);\n        this.chatInput = React.createRef();\n    }\n\n    sendMessage = (event) => {\n        event.preventDefault();\n        this.props.sendMessage(this.chatInput.current.value);\n        // Clear the username input field\n        this.chatInput.current.value = '';\n    }\n\n    render() {\n        let userChat = (\n            <ul className=\"userChatLog\">\n                {this.props.chatLog.map((item, index) => (\n                    <li key={index}>{`${item.username}: ${item.message}`}</li>\n                ))}    \n            </ul> \n        );\n\n        return (\n            <div className=\"box\">\n                <h1 className=\"title\">Chat</h1>\n                <div className=\"content\">\n                    {userChat}\n                </div>\n                <form onSubmit={this.sendMessage}>\n                    <div className=\"field is-grouped\">\n                        <p className=\"control is-expanded\">\n                            <input\n                                className=\"input\"\n                                type=\"text\"\n                                name=\"chatInput\"\n                                placeholder=\"Type text here\"\n                                required\n                                ref={this.chatInput}\n                            />\n                        </p>\n                        <p className=\"control\">\n                            <button className=\"button is-info is-fullwidth\">Submit</button>\n                        </p>  \n                    </div>                       \n                </form>\n            </div>\n        );\n    }\n}\n\nexport default ChatLog;","import React from 'react';\n\nclass UserList extends React.Component {\n    render() {\n        return (\n            <div className=\"box\">\n                <h1 className=\"title\">Users</h1>\n                <div className=\"content\">\n                    {this.props.users.map((user, index) => (\n                        <p key={index}>{user.username}</p>\n                    ))}                    \n                </div>             \n            </div>\n        );\n    }\n}\n\nexport default UserList;","import React from 'react';\nimport GameList from './GameList';\nimport ChatLog from './ChatLog';\nimport UserList from './UserList';\n\nclass Room extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            users: [],\n            chatLog: [],\n        }\n    }\n\n    componentDidMount() {\n        this.props.socket.emit('sendToServer', { type: 'retrieveUsers' });\n\n        this.props.socket.emit('sendToServer', { type: 'retrieveUsername' });\n        // Get chatlog when room loads\n        this.props.socket.emit('sendToServer', { type: 'chatLog' });\n\n        this.props.socket.on('username', (data) => this.setState({ username: data }));\n\n        this.props.socket.on('gameStarted', (data) => { this.props.history.push(`/${data}`); });\n\n        // gets the keys from the object returned from the server and loops through\n        // the array using the previously gotten keys to get the values\n        this.props.socket.on('userList', (data) => {\n            let keys = Object.keys(data);\n            let tempUsers = [];\n            let i;\n            for(i = 0; i < keys.length; i++) {\n                tempUsers.push({\n                    username: data[keys[i]],\n                    socketId: keys[i]\n                });\n            };\n            this.setState({ users: tempUsers });\n        });\n\n        this.props.socket.on('userDisconnected', (data) => {\n            let tempUsers = [];\n            let temp = this.state.users;\n            let i;\n\n            for(i = 0; i < this.state.users.length; i++) {\n                if(temp[i].socketId !== data) {\n                    tempUsers.push(temp[i]);\n                }\n            }         \n            this.setState({ users: tempUsers });\n        });\n\n        this.props.socket.on('chatLogFromServer', (data) => {this.setState({ chatLog: data })});\n    }\n\n    sendMessage = (message) => {\n        this.props.socket.emit('sendToServer', {\n            type: 'chat',\n            username: this.state.username,\n            socketId: this.props.socket.id,\n            message: message\n        });\n    };\n\n    goToGame = (game) => {\n        this.props.socket.emit('createGame', game);       \n    };\n    \n    render() {\n        return (\n            <div className=\"hero is-fullheight\">\n                <div className=\"hero-body\">\n                    <div className=\"container\">\n                        <div className=\"columns is-centered\">\n                            <div className=\"column is-6 has-text-centered\">                             \n                                <GameList\n                                    gameList={this.props.userState.gameList}\n                                    goToGame={this.goToGame}\n                                />\n                                <ChatLog \n                                    sendMessage={this.sendMessage}\n                                    chatLog={this.state.chatLog}\n                                    username={this.state.username}\n                                />\n                                <UserList users={this.state.users} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Room;","import React from 'react';\n\nclass Double07 extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            allTargets: [],\n            showTargets: false,\n            showSingleTarget: false,\n            action: 'reload',\n            target: {},\n            player: {},\n        }\n    }\n\n    componentDidMount() {\n        // Wait for players data from server and convert it to list of players\n        this.props.socket.on('state', (data) => {\n            let keys = Object.keys(data)\n            let targetList = [];\n            let player = {};\n            let i;\n            for(i = 0; i < keys.length; i++) {\n                if(keys[i] === this.props.userState.username) {\n                    player = {\n                        username: keys[i],\n                        hp: data[keys[i]].hp,\n                        ap:  data[keys[i]].ap    \n                    };\n                } else {\n                    targetList.push({\n                        username: keys[i],\n                        hp: data[keys[i]].hp,\n                        ap: data[keys[i]].ap \n                    });\n                }\n            };\n            // Switch to reload action when user ap is zero\n            if (player.ap === 0) {\n                this.setState({\n                    allTargets: targetList,\n                    player: player,\n                    action: 'reload'\n                });\n            } else {\n                this.setState({\n                    allTargets: targetList,\n                    player: player,\n                });\n            }\n        });\n\n        this.props.socket.on('timerExpired', () => {\n            // If attack is picked but not a target, default to reload\n            if (this.state.action === 'attack' && Object.keys(this.state.target).length === 0) {\n                this.props.socket.emit('endOfRound', {\n                    target: this.state.target.username,\n                    action: 'reload',\n                    player: this.state.player.username\n                });\n                this.setState({ action: 'reload' });\n            } else {\n                this.props.socket.emit('endOfRound', {\n                    target: this.state.target.username,\n                    action: this.state.action,\n                    player: this.state.player.username\n                });\n            }\n  \n            this.setState({\n                target: {},\n                targetList: [],\n                showSingleTarget: false,\n                showTargets: false\n            });\n        });\n\n        this.props.socket.on('gameOver', () => {\n            this.props.history.push('/room');\n        });\n    }\n\n    componentWillUnmount() {\n        this.props.socket.removeAllListeners();\n    }\n\n    // Used to be able to toggle selecting a targeted player\n    choosePlayer = (user) => {\n        let i;\n        for(i = 0; i < this.state.allTargets.length; i++) {\n            if(this.state.allTargets[i].username === user) {\n                this.setState({\n                    action: 'attack',\n                    target: this.state.allTargets[i],\n                    showTargets: false,\n                    showSingleTarget: true\n                });\n            }\n        }; \n    }\n\n    chooseAction = (data) => {\n        // Update showTargets so modal of targets pops up on screen\n        if(data === \"attack\") {\n            this.setState({\n                // action: data, Fix server crash when round ends before target selection\n                showTargets: true\n            });\n        } else if (data === \"defend\" || data === \"reload\") {\n            // Reset target when defend or reload is selected\n            this.setState({\n                action: data,\n                showSingleTarget: false,\n                target: {}\n            });\n        }    \n    }\n\n    closeTargetList = () => {\n        this.setState({ showTargets: false });\n    }\n    \n    render() {\n        return (\n            <div className=\"hero is-fullheight\">\n                <div className=\"hero-body\">\n                    <div className=\"container has-text-centered\">\n                        <div className=\"columns is-centered\">\n                            <div className=\"column is-5\">\n                                <h1 className=\"title is-1 has-text-white\">007</h1>\n                                <div className={this.state.showSingleTarget ? \"box\" : \"box is-hidden\"}>\n                                    <h5 className=\"title is-5\">Target</h5>\n                                    <p>{this.state.target.username}</p>\n                                </div>\n                                <div className=\"box\">\n                                    <h5 className=\"title is-5\">{this.props.userState.username}</h5>\n                                    <div className=\"level is-mobile\">\n                                        <div className=\"level-item\">\n                                            <button className=\"button\">Health Points: {this.state.player.hp}</button>\n                                        </div>\n                                        <div className=\"level-item\">\n                                            <button className=\"button\">Action Points: {this.state.player.ap}</button>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"box\">\n                                    <div className=\"buttons\">\n                                        <button\n                                            className={this.state.action === \"attack\" ? \"button is-fullwidth is-danger\" : \"button is-fullwidth is-dark\"}\n                                            onClick={() => this.chooseAction(\"attack\")}\n                                            disabled={this.state.player.ap === 0}\n                                        >\n                                            Attack\n                                        </button>\n                                        <button\n                                            className={this.state.action === \"defend\" ? \"button is-fullwidth is-danger\" : \"button is-fullwidth is-dark\"}\n                                            onClick={() => this.chooseAction(\"defend\")}\n                                            disabled={this.state.player.ap === 0}\n                                        >\n                                            Defend\n                                        </button>\n                                        <button\n                                            className={this.state.action === \"reload\" ? \"button is-fullwidth is-danger\" : \"button is-fullwidth is-dark\"}\n                                            onClick={() => this.chooseAction(\"reload\")}\n                                        >\n                                            Reload\n                                        </button>\n                                    </div> \n                                </div>                                                                                \n                            </div>\n                        </div>\n                    </div>\n                </div>  \n                <div className={this.state.showTargets ? \"modal is-active\" : \"modal\"}>\n                    <div className=\"modal-background\"></div>\n                    <div className=\"modal-content\">\n                        <div className=\"box has-text-centered\">                                   \n                            <h5 className=\"title is-5\">Choose a Target</h5>\n                            {this.state.allTargets.map((user, index) => (\n                                <div \n                                    className={this.state.target.username === user.username ? \"button level is-mobile is-danger\" : \"button level is-mobile is-dark\"}\n                                    key={index}\n                                    onClick={() => this.choosePlayer(user.username)}\n                                >\n                                    <div className=\"level-item\">\n                                        <span>{user.username}</span>\n                                    </div>\n                                    <div className=\"level-item\">\n                                        <span>{user.hp} Hp</span>\n                                    </div>\n                                    <div className=\"level-item\">\n                                        <span>{user.ap} AP</span>  \n                                    </div>                                          \n                                </div>\n                            ))} \n                        </div>\n                    </div>\n                    <button class=\"modal-close is-large\" aria-label=\"close\" onClick={this.closeTargetList}></button>\n                </div>\n                    \n            </div>\n        );\n    }\n}\n\nexport default Double07;","import React from 'react';\nimport Hammer from 'hammerjs';\n\nclass Hot_Potato extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            timeFromServer: 0,\n            timer: 0,\n            potatoHolder: '',\n            userTurn: false,\n            explode: false,\n            handImage: '/images/hand.png'\n        };\n    }\n    \n    componentDidMount() {\n\n        let stage = document.getElementById('swipePotato');\n        let mc = new Hammer(stage);\n\n        mc.on(\"swipe\", this.endOfTurn);\n\n        this.props.socket.on('state', (data) => {     \n            if (this.props.userState.username === data.next) {\n                this.setState({\n                    userTurn: true,\n                    explode: false,\n                    handImage: '/images/hand_with_potato.png'\n                 }, () => {\n                    this.interval = setInterval(() => this.updateTimer(), 1000);    \n                });                \n            }\n            this.setState({\n                timeFromServer: data.timer,\n                startTime: Date.now(),\n                potatoHolder: data.next\n            });\n        });\n\n        this.props.socket.on('explode', () => {\n            clearInterval(this.interval);\n            this.setState({\n                userTurn: false,\n                timer: 0,\n                explode: true\n            });\n            this.props.socket.emit('endOfTurn', { \"player\": this.state.potatoHolder });\n        });\n\n        this.props.socket.on('gameOver', () => {\n            this.props.history.push('/room');\n        });\n    }\n\n    componentWillUnmount() {\n        this.props.socket.removeAllListeners();\n    }\n\n    updateTimer = () => {\n        this.setState({ timer: this.state.timer + 1 });\n    }\n\n    endOfTurn = () => {\n        if (this.state.userTurn === true) {          \n            this.props.socket.emit('endOfTurn', {\n                \"player\": this.state.potatoHolder,\n                \"time\": this.state.timer, \n            });           \n            this.setState({\n                userTurn: false,\n                timer: 0,\n                handImage: '/images/hand.png'\n            });            \n            clearInterval(this.interval);   \n        }        \n    }\n\n    render() {\n        return (\n            <div className=\"hero is-fullheight\">\n                <div className=\"hero-body\">\n                    <div className=\"container has-text-centered\">\n                        <div className=\"columns is-centered\">\n                            <div className=\"column is-5\">\n                                <h1 className=\"landing title is-1 has-text-white\">Hot Potato</h1>\n                                <div className={this.state.userTurn ? \"box\" : \"box is-hidden\"}>\n                                    <h3 className=\"title is-3\">Time Held</h3>\n                                    <h5 className=\"title is-5\">{this.state.timer} Seconds</h5>\n                                </div>\n                                <div className={this.state.userTurn ? \"box is-hidden\" : \"box\"}>\n                                    <h3 className=\"title is-3\">Player with Potato</h3>\n                                    <h5 className=\"title is-5\">{this.state.potatoHolder}</h5>\n                                </div>\n                                <div className=\"box\">\n                                    <img\n                                        id=\"swipePotato\" \n                                        src={this.state.explode === true ? \"/images/hand_with_explosion.png\" : this.state.handImage}\n                                        alt=\"Pass Potato\"\n                                    />\n                                    <button\n                                        className=\"button is-primary is-fullwidth\"\n                                        onClick={this.endOfTurn}\n                                        disabled={!this.state.userTurn}\n                                    >\n                                        Pass The Potato\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>  \n            </div>\n        );\n    }\n}\n\nexport default Hot_Potato;","import React from 'react';\n\nclass Match extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            direction: '',\n            flip: false,\n            playersTurn: true\n        };\n    }\n\n    componentDidMount() {\n        this.props.socket.on('turn', (data) => {\n            console.log(data.players);\n        });\n\n        this.props.socket.on('flip', (data) => {\n            console.log(data);\n            this.setState({ flip: true });\n        });\n\n        this.props.socket.on('timeout', (data) => {\n            console.log(data);\n            this.setState({ playersTurn: false });\n        });\n\n\n    }\n\n    submitDirection = (direction) => {\n        this.setState({ direction: direction }, () => {\n            this.props.socket.emit(`${this.state.direction}`);\n            console.log(`${this.state.direction}`);    \n        });      \n    }\n\n    selectCard = () => {\n        this.props.socket.emit('select');\n    }\n    \n    render() {\n        return (\n            <div className=\"hero is-fullheight\">\n                <div className=\"hero-body\">\n                    <div className=\"container has-text-centered\">\n                        <div className=\"columns is-centered\">\n                            <div className=\"column is-5\">\n                                <h1 className=\"landing title is-1 has-text-white\">Match</h1>\n                                <div className=\"box\">\n                                    <img\n                                        className=\"image\"\n                                        src={this.state.flip === true ? \"/images/hand.png\" : \"/images/hand.png\"}\n                                        alt=\"Card\"\n                                    />\n                                </div>\n                                <div className=\"box\">\n                                    <div className=\"field is-grouped is-grouped-centered\">\n                                        <div className=\"control\">\n                                            <button className=\"button is-large noButton\" disabled></button>\n                                        </div>\n                                        <div className=\"control\">\n                                            <button\n                                                className=\"button is-info is-large\"\n                                                disabled={this.state.playersTurn === false}\n                                                onClick={() => this.submitDirection(\"up\")}\n                                            >\n                                                <img src={\"/images/up_chevron.png\"} alt=\"UP\" />\n                                            </button>\n                                        </div>\n                                        <div className=\"control\">\n                                            <button className=\"button is-large noButton\" disabled></button>\n                                        </div>\n                                    </div>\n                                    <div className=\"field is-grouped is-grouped-centered\">\n                                        <div className=\"control\">\n                                            <button\n                                                className=\"button is-info is-large\"\n                                                disabled={this.state.playersTurn === false}\n                                                onClick={() => this.submitDirection(\"left\")}\n                                            >\n                                                <img src={\"/images/left_chevron.png\"} alt=\"LEFT\" />\n                                            </button>\n                                        </div>\n                                        <div className=\"control\">\n                                            <button\n                                                className=\"button is-info is-large\"\n                                                disabled={this.state.playersTurn === false}\n                                                onClick={this.submitDirection}\n                                            >\n                                                <img src={\"/images/dot_and_circle.png\"} alt=\"SUBMIT\" />\n                                            </button>\n                                        </div>\n                                        <div className=\"control\">\n                                            <button\n                                                className=\"button is-info is-large\"\n                                                disabled={this.state.playersTurn === false}\n                                                onClick={() => this.submitDirection(\"right\")}\n                                            >\n                                                <img src={\"/images/right_chevron.png\"} alt=\"RIGHT\" />\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <div className=\"field is-grouped is-grouped-centered\">\n                                        <div className=\"control\">\n                                            <button className=\"button is-large noButton\" disabled></button>\n                                        </div>\n                                        <div className=\"control\">\n                                            <button \n                                                className=\"button is-info is-large\"\n                                                disabled={this.state.playersTurn === false}\n                                                onClick={() => this.submitDirection(\"down\")}\n                                            >\n                                                <img src={\"/images/down_chevron.png\"} alt=\"DOWN\" />\n                                            </button>\n                                        </div>\n                                        <div className=\"control\">\n                                            <button className=\"button is-large noButton\" disabled></button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>  \n                    </div>\n                </div>  \n            </div>\n        );\n    }\n}\n\nexport default Match;","import React from 'react';\n\nclass Game4 extends React.Component {\n    render() {\n        return (\n            <div className=\"hero is-fullheight\">\n                <div className=\"hero-body\">\n                    <div className=\"container has-text-centered\">\n                        <h1 className=\"landing title is-1 has-text-white\">Game 1</h1>\n                    </div>\n                </div>  \n            </div>\n        );\n    }\n}\n\nexport default Game4;","import React from 'react';\n\nclass Game5 extends React.Component {\n    render() {\n        return (\n            <div className=\"hero is-fullheight\">\n                <div className=\"hero-body\">\n                    <div className=\"container has-text-centered\">\n                        <h1 className=\"landing title is-1 has-text-white\">Game 1</h1>\n                    </div>\n                </div>  \n            </div>\n        );\n    }\n}\n\nexport default Game5;","import React from 'react';\n\nclass NotFound extends React.Component {\n    render() {\n        return (\n            <h1>Page Not Found</h1>\n        );\n    }\n}\n\nexport default NotFound;","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport UsernamePicker from './UsernamePicker';\nimport Room from './Room/Room';\nimport Double07 from './Games/Double07';\nimport HotPotato from './Games/Hot_Potato';\nimport Match from './Games/Match';\nimport Game4 from './Games/Game4';\nimport Game5 from './Games/Game5';\nimport NotFound from './NotFound';\nimport io from 'socket.io-client';\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: '',\n            socket: '',\n            gameList: []\n        };\n\n        this.socket = io();\n    }\n\n    updateUsername = (username) => {\n        this.setState({ username: username });\n    };\n    updateSocketId = (socketId) => {\n        this.setState({ socketId: socketId });\n    };\n    updateGameList = (gameList) => {\n        this.setState({ gameList: gameList });\n    };\n\n    render() {\n        return (\n            <BrowserRouter>\n                <Switch>\n                    <Route\n                        exact\n                        path=\"/\"\n                        render={(props) => <UsernamePicker {...props}\n                        userState={this.state}\n                        socket={this.socket}\n                        updateUsername={this.updateUsername}\n                        updateSocketId={this.updateSocketId}\n                        updateGameList={this.updateGameList}\n                        />} \n                    />\n                    <Route\n                        path=\"/room\"\n                        render={(props) => <Room {...props}\n                        userState={this.state}\n                        socket={this.socket}\n                        />}\n                    />\n                    <Route\n                        path=\"/Double07\" \n                        render={(props) => <Double07 {...props}\n                        userState={this.state}\n                        socket={this.socket}\n                        />}\n                    />\n                    <Route\n                        path=\"/Hot_Potato\"\n                        render={(props) => <HotPotato {...props}\n                        userState={this.state}\n                        socket={this.socket}\n                        />}\n                    />\n                    <Route\n                        path=\"/Match\"\n                        render={(props) => <Match {...props}\n                        userState={this.state}\n                        socket={this.socket}\n                        />}\n                    />\n                    <Route path=\"/game4\" component={Game4} />\n                    <Route path=\"/game5\" component={Game5} />\n                    <Route path=\"/\" component={NotFound} />\n                </Switch>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './components/App';\nimport '../node_modules/bulma/css/bulma.css';\nimport './app.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}